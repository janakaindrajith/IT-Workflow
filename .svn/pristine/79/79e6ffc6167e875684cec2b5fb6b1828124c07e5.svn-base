using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.OracleClient;
using System.Configuration;
using quickinfo_v2.CommonCLS;

namespace quickinfo_v2.Views.ITWorkflow
{
    public partial class IT_Workflow_Dashboard : System.Web.UI.Page
    {
        string myConn = ConfigurationManager.ConnectionStrings["ORAWF"].ToString();
        public string main_sql_where = "";
        string UserName = "";

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                getUser();
                //get_status();
                get_summary();
                
            }
        }

        public void getUser()
        {
            CommonFunctions cmnFunctions = new CommonFunctions();
            UserName = Context.User.Identity.Name;//Get AD Name

            if (UserName.Contains("HNBGI"))
            {
                UserName = cmnFunctions.Right(UserName, (UserName.Length) - 6);
            }
            else
            {
                UserName = cmnFunctions.Right(UserName, (UserName.Length) - 5);
            }

            Session["WF_User"] = UserName;
        }

        


        public void get_status()//status dropdownlist data binding
        {
            //OracleConnection conn = new OracleConnection(myConn);
            //conn.Open();
            //OracleCommand cmd_getStatus = conn.CreateCommand();
            //cmd_getStatus.CommandText = "SELECT DD.ID,DD.DESCRIPTION FROM WF_IT_REFERANCE_DATA DD WHERE DD.TYPE = 'STATUS'";
            //OracleDataReader odr_getStatus = cmd_getStatus.ExecuteReader();

            //DataTable dt_getStatus = new DataTable();
            //dt_getStatus.Load(odr_getStatus);

            //ddl_status.DataTextField = "DESCRIPTION";
            //ddl_status.DataValueField = "ID";

            //ddl_status.DataSource = dt_getStatus;
            //ddl_status.DataBind();

            //ddl_status.Items.Insert(0, new ListItem("All", "-1"));

        }

        public void getAllRequests_By_User()//get job requests
        {
            UserName = Session["WF_User"].ToString();

            OracleConnection conn = new OracleConnection(myConn);
            conn.Open();

            OracleCommand cmd_getAllRequests = conn.CreateCommand();
            cmd_getAllRequests.CommandText = "SELECT RR.REQUEST_ID, RR.REF_NO,RR.REQUEST_USER,RR.SYSTEM_TYPE,RR.REMARKS_BRANCH " +
                                                "FROM WF_IT_REQUEST_REGISTER RR WHERE RR.REQUEST_USER = '"+ UserName +"'" +
                                                main_sql_where + " order by RR.REQUEST_DATE DESC";

            OracleDataReader odr_getAllRequests = cmd_getAllRequests.ExecuteReader();

            DataTable dt_getAllRequests = new DataTable();
            dt_getAllRequests.Load(odr_getAllRequests);

            grd_allRequests.DataSource = dt_getAllRequests;
            grd_allRequests.DataBind();

            odr_getAllRequests.Close();
            conn.Close();
        }

        protected void grd_allRequests_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.Header)
            {
                e.Row.Cells[1].Text = "Request ID";
                e.Row.Cells[2].Text = "Referance No";
                e.Row.Cells[3].Text = "Request User";
                e.Row.Cells[4].Text = "System Type";
                e.Row.Cells[5].Text = "Remarks";


                e.Row.Cells[0].Attributes["width"] = "70px";
            }
        }

        protected void grd_allRequests_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            if (e.CommandName == "Select")
            {
                string selected_req_id = "";

                int rowIndex = Convert.ToInt32(e.CommandArgument);
                selected_req_id = grd_allRequests.Rows[rowIndex].Cells[1].Text;
                lbl_JobID.Text = selected_req_id;

                OracleConnection conn = new OracleConnection(myConn);
                conn.Open();

                OracleCommand cmd_getJobHistory = conn.CreateCommand();
                cmd_getJobHistory.CommandText = "SELECT EE.JOB_NO,EE.STATUS,EE.EVENT_DATE,EE.USER_NAME,EE.REMARKS_UNIT,EE.REMARKS_BRANCH " +
                                                "FROM WF_IT_EVENTS EE WHERE EE.JOB_NO ='" + selected_req_id + "' ORDER BY EE.EVENT_DATE ASC";

                OracleDataReader odr_getJobHistory = cmd_getJobHistory.ExecuteReader();
                DataTable dt_getJobHistory = new DataTable();

                dt_getJobHistory.Load(odr_getJobHistory);

                grd_wf_history.DataSource = dt_getJobHistory;
                grd_wf_history.DataBind();

                odr_getJobHistory.Close();

                panels_appearance();
            }
        }

        protected void grd_wf_history_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.Header)
            {
                e.Row.Cells[0].Text = "Job Number";
                e.Row.Cells[1].Text = "Status";
                e.Row.Cells[2].Text = "Event Date";
                e.Row.Cells[3].Text = "User Name";
                e.Row.Cells[4].Text = "Remarks Unit";
                e.Row.Cells[5].Text = "Remarks Branch";
            }
        }

        private void panels_appearance()//Panel visible handle
        {
            if(alljobs_panel.Visible == true)
            {
                alljobs_panel.Visible = false;
                history_panel.Visible = true;
                status_div.Visible = false;
                ibtnBack.Visible = true;
                back_btn_div.Visible = true;
            }
            else
            {
                alljobs_panel.Visible = true;
                history_panel.Visible = false;
                status_div.Visible = true;
                ibtnBack.Visible = false;
                back_btn_div.Visible = false;
            }
        }

        protected void ibtnBack_Click(object sender, ImageClickEventArgs e)
        {
            panels_appearance();
        }

        public void get_summary()
        {
            OracleConnection conn = new OracleConnection(myConn);
            conn.Open();
            OracleCommand cmd_getSummary = conn.CreateCommand();
            cmd_getSummary.CommandText =    "SELECT " +
                                            "COUNT (*) ALL_RECS, " +
                                            "COUNT (CASE WHEN K.STATUS ='INTIMATE' THEN K.REQUEST_ID ELSE NULL END) AS INTIMATE, " +
                                            "COUNT (CASE WHEN K.STATUS ='APPROVE' THEN K.REQUEST_ID ELSE NULL END) AS APPROVE, " +
                                            "COUNT (CASE WHEN K.STATUS ='PENDING - TAKEN' THEN K.REQUEST_ID ELSE NULL END) AS PENDING_TAKEN, " +
                                            "COUNT (CASE WHEN K.STATUS ='CLOSE' THEN K.REQUEST_ID ELSE NULL END) AS CLOSE, " +
                                            "COUNT (CASE WHEN K.STATUS ='REOPEN' THEN K.REQUEST_ID ELSE NULL END) AS REOPEN, " +
                                            "COUNT (CASE WHEN K.STATUS ='PENDING-APPROVAL' THEN K.REQUEST_ID ELSE NULL END) AS PENDING_APPROVAL, " +
                                            "COUNT (CASE WHEN K.STATUS ='RETURN' THEN K.REQUEST_ID ELSE NULL END) AS RETURN, " +
                                            "COUNT (CASE WHEN K.STATUS ='PENDING-CLARIFICATION-COMPLETE' THEN K.REQUEST_ID ELSE NULL END) AS PENDING_CLARIFICATION_COMPLETE, " +
                                            "COUNT (CASE WHEN K.STATUS ='PENDING-CLARIFICATION' THEN K.REQUEST_ID ELSE NULL END) AS PENDING_CLARIFICATION " +
                                            "FROM(SELECT * FROM WF_IT_REQUEST_REGISTER RR WHERE RR.REQUEST_USER = '" + UserName +"' AND 1=1 " +
                                            "AND TRUNC(RR.REQUEST_DATE) BETWEEN TO_DATE('01/12/2016', 'DD/MM/RRRR') AND TO_DATE(SYSDATE,'DD/MM/RRRR') " +
                                            "order by RR.REQUEST_DATE DESC)K ";

            OracleDataReader odr_getSummary = cmd_getSummary.ExecuteReader();

            string INTIMATE = "";
            string APPROVE = "";
            string PENDING_TAKEN = "";
            string CLOSE = "";
            string REOPEN = "";
            string PENDING_APPROVAL = "";
            string RETURN = "";
            string PENDING_CLARIFICATION_COMPLETE = "";
            string PENDING_CLARIFICATION = "";
            string ALL_RECS = "";


            while(odr_getSummary.Read())
            {
                INTIMATE = odr_getSummary["INTIMATE"].ToString();
                APPROVE = odr_getSummary["APPROVE"].ToString();
                PENDING_TAKEN = odr_getSummary["PENDING_TAKEN"].ToString();
                CLOSE = odr_getSummary["CLOSE"].ToString();
                REOPEN = odr_getSummary["REOPEN"].ToString();
                PENDING_APPROVAL = odr_getSummary["PENDING_APPROVAL"].ToString();
                RETURN = odr_getSummary["RETURN"].ToString();
                PENDING_CLARIFICATION_COMPLETE = odr_getSummary["PENDING_CLARIFICATION_COMPLETE"].ToString();
                PENDING_CLARIFICATION = odr_getSummary["PENDING_CLARIFICATION"].ToString();
                ALL_RECS = odr_getSummary["ALL_RECS"].ToString();
            }

            lbl_INTIMATE_SUM.Text = INTIMATE;
            lbl_APPROVE_SUM.Text = APPROVE;
            lbl_PENDING_TAKEN_SUM.Text = PENDING_TAKEN;
            lbl_CLOSE_SUM.Text = CLOSE;
            lbl_REOPEN_SUM.Text = REOPEN;
            lbl_PENDING_APPROVAL_SUM.Text = PENDING_APPROVAL;
            lbl_RETURN_SUM.Text = RETURN;
            lbl_CLARIFICATION_SUM.Text = PENDING_CLARIFICATION;
            lbl_CLARIFICATION_COMPLETE_SUM.Text = PENDING_CLARIFICATION_COMPLETE;
            lbl_All_RECS_SUM.Text = ALL_RECS;

            odr_getSummary.Close();
            conn.Close();

        }

        protected void lb_intimate_Click(object sender, EventArgs e)
        {
            string status = "INTIMATE";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();

        }

        protected void lb_approve_Click(object sender, EventArgs e)
        {
            string status = "APPROVE";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();
        }

        protected void lb_pendingTaken_Click(object sender, EventArgs e)
        {
            string status = "PENDING - TAKEN";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();
        }

        protected void lb_close_Click(object sender, EventArgs e)
        {
            string status = "CLOSE";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();
        }

        protected void lb_reopen_Click(object sender, EventArgs e)
        {
            string status = "REOPEN";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();
        }

        protected void lb_pendingApproval_Click(object sender, EventArgs e)
        {
            string status = "PENDING-APPROVAL";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();
        }

        protected void lb_return_Click(object sender, EventArgs e)
        {
            string status = "RETURN";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();
        }

        protected void lb_clarification_Click(object sender, EventArgs e)
        {
            string status = "PENDING-CLARIFICATION";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();
        }

        protected void lb_Cla_Complete_Click(object sender, EventArgs e)
        {
            string status = "PENDING-CLARIFICATION-COMPLETE";

            main_sql_where = "AND RR.STATUS = '" + status + "' ";
            getAllRequests_By_User();
        }

        protected void lb_All_Click(object sender, EventArgs e)
        {
            main_sql_where = "AND 1=1";
            getAllRequests_By_User();
        }



    }
}